/**
 * This allows typescript to pick up the magic constants that are
 * auto-generated by Electron's `contextBridge` interface.
 *
 * @constant
 */
declare const api: typeof import('./lib/api').default;

/**
 * Modal message bus signature.
 *
 * @type {ModalRequest}
 */
declare type ModalRequest<T = unknown> = {
  target: string;
  payload?: T;
};

/** @interface */
declare interface RouteContextCompetitions {
  competition: Awaited<
    ReturnType<typeof api.competitions.find<typeof import('../shared/eagers').competition>>
  >;
}

declare interface RouteContextSponsors {
  hydrate: () => void;
  sponsors: Awaited<ReturnType<typeof api.sponsors.all<typeof import('../shared/eagers').sponsor>>>;
}

/** @interface */
declare interface RouteContextTeams {
  team: Awaited<ReturnType<typeof api.teams.all<typeof import('../shared/eagers').team>>>[number];
}

/** @interface */
declare interface RouteStateMapPool {
  from: string;
  label: string;
}

/** @module */
declare module '*.mp4' {
  const src: string;
  export default src;
}

/** @module */
declare module '*.png' {
  const src: string;
  export default src;
}

/** @module */
declare module '*.webm' {
  const src: string;
  export default src;
}
